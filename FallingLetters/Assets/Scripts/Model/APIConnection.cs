using UnityEngine;
using UnityEngine.Networking;
using System.Threading.Tasks;

/// <summary>
/// 
///  This class is responsible for communication with the 
///  banana API.
///  Object of this class is created by the APIController in controllers.
/// 
///  This class contains AI generated content 
/// 
/// </summary>
public class APIConnection
{
    private Texture2D _returnedImage;
    private  DataBananaResponse _bananaResponse; 
    private bool _urlUnlocked = false;
    private static bool _imageUnlocked = false;

    //BananaAPI endpoint that returns a JSON object
    private const string API_URL = "https://marcconrad.com/uob/banana/api.php";

    //Getters
    public Texture2D returnedImage{
        get{
            return _returnedImage;
        }
    }

    public DataBananaResponse bananaResponse{
        get{
            return _bananaResponse;
        }
    }

    public bool urlUnlocked{
        get{
            return _urlUnlocked;
        }
    }

    public static bool imageUnlocked{
        get{
            return _imageUnlocked;
        }
    }

    

    /// <summary>
    /// 
    ///  Asynchronous function which is responsible for connecting banana API and 
    ///  fetching data.
    ///  The method is called by scripts in ExtraAttempts Scene in views.
    /// 
    ///  This function is generated by the LLM ChatGPT (GPT-4) by OpenAI. (except line lock)
    /// 
    /// </summary>
    public async Task FetchBananaDataAsync()
    {
        using (UnityWebRequest request = UnityWebRequest.Get(API_URL))
        {
            await request.SendWebRequest();

            if (request.result == UnityWebRequest.Result.Success)
            {
                _bananaResponse = JsonUtility.FromJson<DataBananaResponse>(request.downloadHandler.text);
                Debug.Log("question: " + _bananaResponse.question);
                _urlUnlocked = true; /*This locking mechanism prevents the "HandleAPICall.cs" from trying to
                load the image before the image url is fetched. This is NOT AI generated */
            }
            else
            {
                Debug.LogError("Banana API Error: " + request.error);
            }
        }
    }

    /// <summary>
    /// 
    ///  This asynchronous method is responsible for fetching the image 
    ///  returned by the banana API.
    ///  
    ///  This function is partially generated by the LLM ChatGPT (GPT-4) by OpenAI
    /// 
    /// </summary>
    /// 
    /// <param name="url"> image URL returned by the banana API </param>
    /// 
    /// <returns> returns the fetched image in the form of Texture2D or null </returns>
    public async Task<Texture2D> LoadImageAsync(string url)
    {
        using (UnityWebRequest request = UnityWebRequestTexture.GetTexture(url))
        {
            await request.SendWebRequest();

            if (request.result == UnityWebRequest.Result.Success)
            {
                _returnedImage = ((DownloadHandlerTexture)request.downloadHandler).texture;
                _imageUnlocked = true;
                return _returnedImage;
            }
            else
            {
                Debug.LogError("Image Load Error: " + request.error);
                return null; 
            }
        }
    }


}
