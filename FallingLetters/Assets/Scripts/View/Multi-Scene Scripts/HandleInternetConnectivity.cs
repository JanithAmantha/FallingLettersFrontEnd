using UnityEngine;
using UnityEngine.SceneManagement;
using System.Collections;

/// <summary>
/// 
///  Responsible for checking internet availability by 
///  sending a ping message to Google's DNS. The class is
///  used by all the scenes available in the game.
/// 
///  This class contains AI generated content
/// 
/// </summary>
public class HandleInternetConnectivity : MonoBehaviour
{
    /// <summary>
    /// 
    ///  IEnumerator is run using StartCoroutine method in unity to check the 
    ///  internet connectivity when every Scene starts.
    /// 
    /// </summary>
    private void Start()
    {
        StartCoroutine(CheckInternetConnection());
    }

    /// <summary>
    /// 
    ///  IEnumerators in Unity allows tasks within it to be paused and 
    ///  then resumed. It allows execution of other codes while its paused. (Not Threading)
    ///  
    ///  This IEnumerator is responsible for sending a ping request to Google's DNS to check 
    ///  internet connectivity. it sends a ping message and waits 5 seconds for a response.
    ///  if the 5 seconds are exceeded it will assume that there is no internet connectivity.
    ///  If the ping is successful it will wait for another 10 seconds to recheck the connectivity.
    /// 
    ///  This function is generated by the LLM ChatGPT (GPT-4) by OpenAI.
    /// 
    /// </summary>
    /// 
    /// <returns> "yield return" pauses execution </returns>
    private IEnumerator CheckInternetConnection()
    {
        while (true)
        {
            Ping ping = new Ping("8.8.8.8"); // Google's public DNS

            // Wait until the ping operation completes
            float timeout = 5f; // Maximum wait time (5 seconds)
            float timer = 0f;

            while (!ping.isDone && timer < timeout)
            {
                yield return null; // Wait for the next frame to increase the timer
                timer += Time.deltaTime;
            }

            // If the ping operation is not done after timeout, or if ping time is too high, assume no internet
            if (!ping.isDone || ping.time == -1)
            {
                Debug.Log("Internet is not available");
                SceneManager.LoadScene("InternetChecker");
                yield break; // Stop the coroutine to avoid unnecessary execution
            }

            yield return new WaitForSeconds(10f); // Check every 10 seconds instead of 1s to avoid excessive requests
        }
    }
}
